[
  {
    "question": "Write a function that returns the sum of the two numbers",
    "template": "def addTwo(a, b):",
    "testCases": [
      {
        "exe": "print(addTwo(3, 5), end='')",
        "answer": "8"
      },
      {
        "exe": "print(addTwo(-3, -7), end='')",
        "answer": "-10"
      },
      {
        "exe": "print(addTwo(100, 3000), end='')",
        "answer": "3100"
      }
    ]
  },
  {
    "question": "Write a function that returns the sum of the three numbers",
    "template": "def addThree(a, s,d ):",
    "testCases": [
      {
        "exe": "print(addThree(3, 5, 1), end='')",
        "answer": "9"
      },
      {
        "exe": "print(addThree(-3, -7, 11), end='')",
        "answer": "1"
      },
      {
        "exe": "print(addThree(100, 3000,-100), end='')",
        "answer": "3000"
      }
    ]
  },
  {
    "question": "Write a function that returns the average of the three numbers",
    "template": "def aveThree(q, w, e):",
    "testCases": [
      {
        "exe": "print(aveThree(5, 5, 5), end='')",
        "answer": "5"
      },
      {
        "exe": "print(aveThree(10, 5, 15), end='')",
        "answer": "10"
      },
      {
        "exe": "print(aveThree(100, 300,-100), end='')",
        "answer": "100"
      }
    ]
  },
  {
    "question": "Write a function that returns the average of the two numbers",
    "template": "def aveTwo(x, y):",
    "testCases": [
      {
        "exe": "print(aveTwo(5, 5), end='')",
        "answer": "5"
      },
      {
        "exe": "print(aveTwo(10, 13), end='')",
        "answer": "13"
      },
      {
        "exe": "print(aveTwo(100, 100), end='')",
        "answer": "100"
      }
    ]
  },
  {
    "question": "Write a function that returns the absolute value of a number",
    "template": "def absValue(num):",
    "testCases": [
      {
        "exe": "print(absValue(5), end='')",
        "answer": "5"
      },
      {
        "exe": "print(absValue(-7), end='')",
        "answer": "7"
      },
      {
        "exe": "print(absValue(0), end='')",
        "answer": "0"
      }
    ]
  },
  {
    "question": "Write a function that calculates the area of a rectangle",
    "template": "def recArea(length, width):",
    "testCases": [
      {
        "exe": "print(recArea(4, 6), end='')",
        "answer": "24"
      },
      {
        "exe": "print(recArea(20, 3), end='')",
        "answer": "60"
      },
      {
        "exe": "print(recArea(0, 10), end='')",
        "answer": "0"
      }
    ]
  },
  {
    "question": "Write a function that multiplies two numbers",
    "template": "def mulTwo(a, b):",
    "testCases": [
      {
        "exe": "print(mulTwo(3, 5), end='')",
        "answer": "15"
      },
      {
        "exe": "print(mulTwo(-2, 6), end='')",
        "answer": "-12"
      },
      {
        "exe": "print(mulTwo(0, 100), end='')",
        "answer": "0"
      }
    ]
  },
  {
    "question": "Write a function that checks if a word is a palindrome",
    "template": "def wordPal(word):",
    "testCases": [
      {
        "exe": "print(wordPal('racecar'), end='')",
        "answer": "True"
      },
      {
        "exe": "print(wordPal('hello'), end='')",
        "answer": "False"
      },
      {
        "exe": "print(wordPal('deified'), end='')",
        "answer": "True"
      }
    ]
  },
  {
    "question": "Write a function that checks if a sentence is a palindrome",
    "template": "def senPal(sentence):",
    "testCases": [
      {
        "exe": "print(senPal('Able was I saw Elba'), end='')",
        "answer": "True"
      },
      {
        "exe": "print(senPal('This is not a palindrome'), end='')",
        "answer": "False"
      },
      {
        "exe": "print(senPal('A man, a plan, a canal, Panama!'), end='')",
        "answer": "True"
      }
    ]
  },
  {
    "question": "Write a function that checks if a phrase is a palindrome",
    "template": "def phrasePal(phrase):",
    "testCases": [
      {
        "exe": "print(phrasePal('Madam in Eden, Iâ€™m Adam'), end='')",
        "answer": "True"
      },
      {
        "exe": "print(phrasePal('Not a palindrome'), end='')",
        "answer": "False"
      },
      {
        "exe": "print(phrasePal('Step on no pets'), end='')",
        "answer": "True"
      }
    ]
  },
  {
    "question": "Write a function that checks if a number is a palindrome",
    "template": "def numPal(number):",
    "testCases": [
      {
        "exe": "print(numPal(121), end='')",
        "answer": "True"
      },
      {
        "exe": "print(numPal(12345), end='')",
        "answer": "False"
      },
      {
        "exe": "print(numPal(12321), end='')",
        "answer": "True"
      }
    ]
  },
  {
    "question": "Write a function to calculate the area of a square",
    "template": "def squArea(side):",
    "testCases": [
      {
        "exe": "print(squArea(5), end='')",
        "answer": "25"
      },
      {
        "exe": "print(squArea(10), end='')",
        "answer": "100"
      },
      {
        "exe": "print(squArea(2.5), end='')",
        "answer": "6.25"
      }
    ]
  },
  {
      "question": "Create a function that takes a number as an argument, increments the number by +1 and returns the result.",
      "template": "def increNum(num):",
      "testCases": [
          {
              "exe": "increNum(0)",
              "answer": 1
          },
          {
              "exe": "increNum(9)",
              "answer": 10
          },
          {
              "exe": "increNum(-3)",
              "answer": -2
          }
      ]
  },
  {
      "question": "Create a function that takes a string and returns it as an integer.",
      "template": "def strInt(string):",
      "testCases": [
          {
              "exe": "strInt('6')",
              "answer": 6
          },
          {
              "exe": "strInt('1000')",
              "answer": 1000
          },
          {
              "exe": "strInt('12')",
              "answer": 12
          }
      ]
      
  },
  {
      "question": "Create a function that takes the age in years and returns the age in days.",
      "template": "def calAge(age):",
      "testCases": [
          {
              "exe": "calAge(65)",
              "answer": 23725
          },
          {
              "exe": "calAge(0)",
              "answer": 0
          },
          {
              "exe": "calAge(20)",
              "answer": 7300
          }
      ]
  },
  {
      "question": "Create a function that takes length and width and finds the perimeter of a rectangle.",
      "template": "def rectPeri(length, width):",
      "testCases": [
          {
              "exe": "rectPeri(6, 7)",
              "answer": 26
          },
          {
              "exe": "rectPeri(20, 10)",
              "answer": 60
          },
          {
              "exe": "rectPeri(2, 9)",
              "answer": 22
          }
      ]
  },
  {
      "question": "Create a function that takes voltage and current and returns the calculated power.",
      "template": "def calPow(voltage, current):",
      "testCases": [
          {
              "exe": "calPow(230, 10)",
              "answer": 2300
          },
          {
              "exe": "calPow(110, 3)",
              "answer": 330
          },
          {
              "exe": "calPow(480, 20)",
              "answer": 9600
          }
          ]
  },
  {
      "question": "Create a function that takes a base number and an exponent number and returns the calculation.",
      "template": "def calExpo(base, exponent):",
      "testCases": [
          {
              "exe": "calExpo(5, 5)",
              "answer": 3125
          },
          {
              "exe": "calExpo(10, 10)",
              "answer": 10000000000
          },
          {
              "exe": "calExpo(3, 3)",
              "answer": 27
          }
          ]
  },

  {
      "question": "Create a function that takes a boolean variable flag and returns it as a string.",
      "template": "def boolStr(flag):",
      "testCases": [
          {
              "exe": "boolStr(True)",
              "answer": "True"
          },
          {
              "exe": "boolStr(False)",
              "answer": "False"
          },
          {
              "exe": "boolStr(False)",
              "answer": "False"
          }
      ]
  },
  {
    "question": "Write a function to calculate the area of a right triangle",
    "template": "def triArea(base, height):",
    "testCases": [
      {
        "exe": "print(triArea(5, 10), end='')",
        "answer": "25.0"
      },
      {
        "exe": "print(triArea(7, 3), end='')",
        "answer": "10.5"
      },
      {
        "exe": "print(triArea(2.5, 4), end='')",
        "answer": "5.0"
      }
    ]
  },
  {
    "question": "Write a function to calculate the area of a right rectangle",
    "template": "def recArea(base, height):",
    "testCases": [
      {
        "exe": "print(recArea(5, 10), end='')",
        "answer": "25.0"
      },
      {
        "exe": "print(recArea(7, 3), end='')",
        "answer": "10.5"
      },
      {
        "exe": "print(recArea(2.5, 4), end='')",
        "answer": "5.0"
      }
    ]
  },
  {
    "question": "Write a function to calculate the area of a circle",
    "template": "def circArea(radius):",
    "testCases": [
      {
        "exe": "print(circArea(5), end='')",
        "answer": "78.54"
      },
      {
        "exe": "print(circArea(10), end='')",
        "answer": "314.16"
      },
      {
        "exe": "print(circArea(2.5), end='')",
        "answer": "19.63"
      }
    ]
  },
  {
    "question": "Python: How to check if a number is odd or even?",
    "template": "def oddEven(number):",
    "testCases": [
        {
            "exe": "print(oddEven(4), end='')",
            "answer": "Even"
        },
        {
            "exe": "print(oddEven(7), end='')",
            "answer": "Odd"
        },
        {
            "exe": "print(oddEven(0), end='')",
            "answer": "Even"
        }
    ]
   },
   {
    "question": "Count the number of occurrences in a list",
    "template": "def countElem(lst, element):",
    "testCases": [
        {
            "exe": "print(countElem([1, 2, 3, 4, 4, 4, 5], 4), end='')",
            "answer": "3"
        },
        {
            "exe": "print(countElem(['a', 'b', 'c', 'a', 'a'], 'a'), end='')",
            "answer": "3"
        },
        {
            "exe": "print(countElem([True, False, True, True], False), end='')",
            "answer": "1"
        }
    ]
},
{
    "question": "Create n copies of the first 2 characters of a given string",
    "template": "def copies(string, n):",
    "testCases": [
        {
            "exe": "print(copies('Hello', 3), end='')",
            "answer": "'HeHeHe'"
        },
        {
            "exe": "print(copies('Python', 5), end='')",
            "answer": "'PyPyPyPyPy'"
        },
        {
            "exe": "print(copies('Hi', 2), end='')",
            "answer": "'HiHi'"
        }
    ]
},
{
    "question": "Count the number of vowels in a string",
    "template": "def countVol(string):",
    "testCases": [
        {
            "exe": "print(countVol('Hello'), end='')",
            "answer": "2"
        },
        {
            "exe": "print(countVol('Python'), end='')",
            "answer": "1"
        },
        {
            "exe": "print(countVol('Hi there'), end='')",
            "answer": "3"
        }
    ]
}
]